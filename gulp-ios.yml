trigger:
- master

pool:
  vmImage: 'macos-latest'

steps:
# This task trigger a new build to run, this build is the same as the step above that generates the bundle
- task: Npm@1 # Run npm install
  displayName: 'npm install'
  inputs:
    command: install
    workingDir: '$(System.DefaultWorkingDirectory)'
- task: Npm@1 # Run npm run build
  displayName: 'npm run build'
  inputs:
    command: custom
    customCommand: run build

- publish: 'www/' # Publish App artifact
  artifact: 'www'
  displayName: 'Publishing Artifact'

- bash: | # Installing cordova
    sudo npm i -g cordova
  displayName: 'npm i -g cordova@latest'

- bash: | # Install ionic cli
    sudo npm install -g @ionic/cli
  displayName: 'npm i -g @ionic/cli'

- bash: | # Install Gulp CLI
    sudo npm install --global gulp-cli
  displayName: 'npm install --global gulp-cli'

- task: gulp@1
  inputs:
    targets: prod-ios
    gulpjs: '$(System.DefaultWorkingDirectory)/gulpfile.js'
  displayName: 'Run gulp task'
    
- bash: | # Running gulp to create the apk
    gulp prod-ios
  displayName: 'Execute gulp prod-android'

- bash: | # List all the files in the project Directory
    ls -la
  displayName: 'ls -la'

- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: 'IOS_Certificate.p12'
    certPwd: 'B#0k3nL@g'
    keychain: 'temp'

- task: InstallAppleProvisioningProfile@1
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: 'Tribute_App_Store_Provisioning_Profile_26112019.mobileprovision'
- task: Xcode@5
  inputs:
    actions: 'build'
    sdk: 'iphoneos'
    packageApp: true
    useXcpretty: false
    scheme: ''
    signingOption: 'manual'
    signingIdentity: '$(APPLE_CERTIFICATE_SIGNING_IDENTITY)'
    provisioningProfileUuid: '$(APPLE_PROV_PROFILE_UUID)'
    xcWorkspacePath: '**/*.xcodeproj'
    exportPath: '$(agent.buildDirectory)/output/$(sdk)/$(configuration)'
    

- task: CocoaPods@0
  inputs:
    forceRepoUpdate: true
    projectDirectory: '$(system.defaultWorkingDirectory)/platforms/ios'
  displayName: 'pod install using the CocoaPods task with a forced repo update and a custom project directory'

- task: CopyFiles@2
  inputs:
    contents: '**/*.ipa'
    targetFolder: '$(build.artifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: $(build.artifactStagingDirectory)
    artifactName: MyBuildOutputs


# - task: ArchiveFiles@2
#   displayName: 'Package .xcarchive into a zip file'
#   inputs:
#     rootFolderOrFile: '$(agent.buildDirectory)/CordovaLib.xcarchive/'
#     archiveFile: '$(build.artifactStagingDirectory)/CordovaLib.xcarchive.zip'

# - task: PublishBuildArtifacts@1
#   inputs:
#     pathToPublish: '$(build.artifactStagingDirectory)/CordovaLib.xcarchive.zip'
#     artifactName: 'xcarchive-files'
#     artifactType: 'container'
