# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - master
      - dev
pr: none

pool:
  vmImage: 'macOS-latest'

steps:
# This task trigger a new build to run, this build is the same as the step above that generates the bundle
- task: Npm@1 # Run npm install
  displayName: 'npm install'
  inputs:
    command: install
    workingDir: '$(System.DefaultWorkingDirectory)'
- task: Npm@1 # Run npm run build
  displayName: 'npm run build'
  inputs:
    command: custom
    customCommand: run build

- publish: 'www/' # Publish App artifact
  artifact: 'www'
  displayName: 'Publishing Artifact'

- bash: | # List files in directory
    ls -la

- bash: | # Installing cordova
    sudo npm i -g cordova
  displayName: 'npm i -g cordova@latest'

- bash: | # Install ionic cli
    sudo npm install -g @ionic/cli
  displayName: 'npm i -g @ionic/cli'

- bash: | # Install gulp cli
    sudo npm install --global gulp-cli
  displayName: 'npm install --global gulp-cli'

# Needed to solve missing dependency problem, see the troubleshooting topic
# - bash: |
#     sudo apt-get install lib32z1
#   displayName: 'sudo apt-get install lib32z1'
# - task: gulp@1
#   inputs:
#     targets: prod-android
#     gulpjs: '$(System.DefaultWorkingDirectory)/gulpfile.js'
#   displayName: 'Run gulp task'
    
- script: | # Running gulp to create the apk
    if [ $(Build.SourceBranchName) == "master" ]; then
      gulp prod-android
    elif [ $(Build.SourceBranchName) == "dev" ]; then
      gulp dev-android
    fi
  displayName: 'Execute gulp build android'

- task: CopyFiles@2 # Copies all .apk files to publish
  displayName: 'copy tribute-*.apk to $(Build.BinariesDirectory)'
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: 'tribute-*.apk'
    CleanTargetFolder: true
    TargetFolder: '$(Build.BinariesDirectory)'
    flattenFolders: true


- publish: '$(Build.BinariesDirectory)' # Publish artifact
  artifact: 'android-app'
  displayName: 'publish artifact'

